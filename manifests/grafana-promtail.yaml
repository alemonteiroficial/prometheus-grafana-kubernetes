--- # Daemonset.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: promtail-daemonset
  namespace: monitoring
spec:
  selector:
    matchLabels:
      name: promtail
  template:
    metadata:
      labels:
        name: promtail
    spec:
      serviceAccount: promtail-serviceaccount
      containers:
      - name: promtail-container
        image: grafana/promtail:3.5.0
        args:
        - -config.file=/etc/promtail/promtail.yaml
        env: 
        - name: 'HOSTNAME' # needed when using kubernetes_sd_configs
          valueFrom:
            fieldRef:
              fieldPath: 'spec.nodeName'
        volumeMounts:
        - name: logs
          mountPath: /var/log
        - name: promtail-config
          mountPath: /etc/promtail
        - mountPath: /var/lib/docker/containers
          name: varlibdockercontainers
          readOnly: true
      volumes:
      - name: logs
        hostPath:
          path: /var/log
      - name: varlibdockercontainers
        hostPath:
          path: /var/lib/docker/containers
      - name: promtail-config
        configMap:
          name: promtail-config
--- # configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: promtail-config
  namespace: monitoring
data:
  promtail.yaml: |
    server:
      http_listen_port: 9080
      grpc_listen_port: 0
    clients:
    - url: http://loki-distributor.default.svc.cluster.local:3100/loki/api/v1/push
    positions:
      filename: /tmp/positions.yaml
    target_config:
      sync_period: 10s
    scrape_configs:
    - job_name: kubernetes-pods
      kubernetes_sd_configs:
        - role: pod
      pipeline_stages:
        - docker: {}
      relabel_configs:
        - source_labels: ['__meta_kubernetes_pod_container_name']
          action: keep
          regex: '.+'
        - source_labels: ['__meta_kubernetes_pod_node_name']
          target_label: host
          action: replace
        - action: labelmap
          regex: __meta_kubernetes_pod_label_(.+)
        - source_labels: ['__meta_kubernetes_container_name']
          target_label: container
          action: replace
        - source_labels: ['__meta_kubernetes_pod_name']
          target_label: pod
          action: replace
        - source_labels: ['__meta_kubernetes_namespace']
          target_label: namespace
          action: replace
        - source_labels: ['__meta_kubernetes_container_name']
          target_label: job
          action: replace
        - source_labels:
            - __meta_kubernetes_pod_uid
            - __meta_kubernetes_container_name
          regex: (.*)/(.*)
          target_label: __path__
          replacement: /var/log/pods/*$1/*.log

--- # Clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: promtail-clusterrole
rules:
- apiGroups: [""] # "" representa os recursos core do Kubernetes (pods, nodes, services, etc.)
  resources:
    - pods
    - nodes
    - services
    - endpoints
  verbs: ["get", "list", "watch"]
- apiGroups: ["extensions", "apps"] # Para daemonsets
  resources:
    - daemonsets
  verbs: ["get", "list", "watch"]

--- # ServiceAccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: promtail-serviceaccount
  namespace: monitoring

--- # Rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: promtail-clusterrolebinding
  namespace: monitoring
subjects:
    - kind: ServiceAccount
      name: promtail-serviceaccount
      namespace: monitoring
roleRef:
    kind: ClusterRole
    name: promtail-clusterrole
    apiGroup: rbac.authorization.k8s.io